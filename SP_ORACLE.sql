-- CREANDO LAS TABLAS
CREATE TABLE CURSO(
COD_CURSO INT PRIMARY KEY,
NOMBRE VARCHAR(50),
DESCRIPCION VARCHAR(50)
);
CREATE TABLE PUBLICACION(
COD_PUBLICACION INT PRIMARY KEY,
COD_CURSO INT,
FOREIGN KEY(COD_CURSO) REFERENCES CURSO(COD_CURSO),
TITULO VARCHAR(50),
SEMANA VARCHAR(2),
FECHA DATE
);


CREATE TABLE USUARIO(
    COD_USUARIO INT PRIMARY KEY,
    NOMBRE VARCHAR(50) NOT NULL,
    PASSWORD VARCHAR(100)
);

-- PROCEDIMIENTO ALMACENADO INSERT
CREATE OR REPLACE PROCEDURE SP_CURSO_INSERT(
COD_CURSO_IN IN INT,
NOMBRE_IN IN VARCHAR2,
DESCRIPCION_IN IN VARCHAR2
)
is
BEGIN
insert into "CURSO"("COD_CURSO","NOMBRE","DESCRIPCION") values(COD_CURSO_IN,NOMBRE_IN,DESCRIPCION_IN);
END SP_CURSO_INSERT;
-- llamado al sp insert
BEGIN
SP_CURSO_INSERT(1,'LARAVEL','FRAMEWORK DE PHP');
commit;
ENd;


-- PROCEDIMIENTO ALMACENADO UPDATE
CREATE OR REPLACE PROCEDURE SP_CURSO_UPDATE(
COD_CURSO_IN IN INT,
NOMBRE_IN IN VARCHAR2,
DESCRIPCION_IN IN VARCHAR2
)
is
BEGIN
update "CURSO" set 
"NOMBRE"=NOMBRE_IN,
"DESCRIPCION"=DESCRIPCION_IN
where "COD_CURSO" = COD_CURSO;
END SP_CURSO_UPDATE;

-- llamado al sp update
BEGIN
 SP_CURSO_UPDATE(1,'LARAVEL','FRAMEWORK FACIL DE PHP');
end;




-- PROCEDIMIENTO ALMACENADO DELETE
CREATE OR REPLACE PROCEDURE SP_CURSO_DELETE(
COD_CURSO_IN IN INT
)
is
BEGIN
delete from "CURSO"
where "COD_CURSO" = COD_CURSO_IN;
END SP_CURSO_DELETE;

-- llamado al sp delete
BEGIN
SP_CURSO_DELETE(1);
end;

-- PROCEDIMIENTO  SELECT (CON CURSORES)
CREATE OR REPLACE PROCEDURE SP_CURSO_SELECT(c1 out sys_refcursor)
as
begin
open c1 for SELECT * FROM "CURSO";
end;

variable c1 refcursor;
execute SP_CURSO_SELECT(:c1);
print c1;